package suka;

import Database.DBManager;
import Entity.User;
import org.telegram.telegrambots.api.methods.send.SendMessage;
import org.telegram.telegrambots.api.objects.Update;
import org.telegram.telegrambots.api.objects.replykeyboard.ReplyKeyboardMarkup;
import org.telegram.telegrambots.api.objects.replykeyboard.buttons.KeyboardButton;
import org.telegram.telegrambots.api.objects.replykeyboard.buttons.KeyboardRow;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.exceptions.TelegramApiException;
import suka.ButtonsManager;
import suka.MessageBuilder;
import suka.StatsParser;
import suka.UserValidations;

import javax.management.openmbean.SimpleType;
import java.util.*;


public class Bot extends TelegramLongPollingBot {

    public String greeting;
    public Map<String, String> users;
    public static ArrayList<String> shit_buttons = new ArrayList<>();

    public synchronized void setButtons(SendMessage sendMessage,
                                        ArrayList<String> butts) {

        ReplyKeyboardMarkup replyKeyboardMarkup = new ReplyKeyboardMarkup();
        sendMessage.setReplyMarkup(replyKeyboardMarkup);
        replyKeyboardMarkup.setSelective(true);
        replyKeyboardMarkup.setResizeKeyboard(true);
        replyKeyboardMarkup.setOneTimeKeyboard(false);

        List<KeyboardRow> keyboard = new ArrayList<>();

        int i = 0;

        while ( i != butts.size() ){

            KeyboardRow row = new KeyboardRow();

            row.add(new KeyboardButton(butts.get(i)));
            i++;

            if ( i == butts.size() ){

                keyboard.add(row);
                break;
            }

            row.add(new KeyboardButton(butts.get(i)));
            i++;

            keyboard.add(row);

        }

        replyKeyboardMarkup.setKeyboard(keyboard);
    }

    public void onUpdateReceived(Update update) {
        String message = update.getMessage().getText();
        String chat_id = update.getMessage().getChatId().toString();
        Long user_id = update.getMessage().getChat().getId();
        org.telegram.telegrambots.api.objects.User forwardFrom = update.getMessage().getForwardFrom();
        String userName = update.getMessage().getChat().getUserName();
        /*sendMsg(chat_id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, —Å—Ç—Ä–∞–Ω–Ω–∏–∫!\n" +
                "–¢—ã –ø–æ–ø–∞–ª –≤ –ø—É—Å—Ç–æ—à—å, –∑–¥–µ—Å—å –Ω–∏ —É –∫–æ–≥–æ –Ω–µ—Ç –∏–º–µ–Ω, –ª–∏—à—å –ø—Ä–æ–∑–≤–∏—â–∞.\n" +
                "–ö–∞–∫ —Ç–µ–±—è –≤–µ–ª–∏—á–∞—Ç—å?", null);*/
        System.out.println(forwardFrom);

        User user = DBManager.getUser(String.valueOf(user_id));

        if (user == null){
            if (UserValidations.checkStatsMessage(message, forwardFrom, this, chat_id, update)) {
                try {
                    if (userName.isEmpty()) {
                        sendMsg(chat_id, "–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º Username –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–µ!", null);
                    } else {
                        user = StatsParser.parseStats(message, userName);
                        if (!String.valueOf(user_id).equals(user.getId())) {
                            sendMsg(chat_id, "–≠—Ç–æ –Ω–µ —Ç–≤–æ–π \uD83D\uDCDF–ü–∏–ø-–±–æ–π, ID –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç.", null);
                        } else if (!user.getFraction().equals("üí£–ú–µ–≥–∞—Ç–æ–Ω–Ω–∞") && !user.isAdmin()) {
                            sendMsg(chat_id, "–¢—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—à—å –≤–æ —Ñ—Ä–∞–∫—Ü–∏–∏ \uD83D\uDCA3–ú–µ–≥–∞—Ç–æ–Ω–Ω–∞.", null);
                        } else {
                            DBManager.upsertUser(user);
                            sendMsg(chat_id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–µ–≥–∞—Ç–æ–Ω–Ω—É!", ButtonsManager.getButtons(1));
                        }
                    }
                } catch (Exception e) {
                    sendMsg(chat_id, "–¢—ã –º–Ω–µ —á–µ–º –≤ –ª–∏—Ü–æ —Ç—ã—á–µ—à—å? –ö—Å–∏–≤—É –¥–∞–≤–∞–π!", ButtonsManager.getButtons(1));
                }
            } else {
                sendMsg(chat_id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Å–∞–º—É—é –Ω–µ —Ç–æ–∫—Å–∏—á–Ω—É—é —Ñ—Ä–∞–∫—Ü–∏—é –≤ –∏–≥—Ä–µ.\n–î–æ–∫–∞–∂–∏ —á—Ç–æ —Ç—ã –¥–æ—Å—Ç–æ–π–Ω—ã–π –∏ —Å–∫–∏–Ω—å –º–Ω–µ –ø–æ–ª–Ω—ã–π —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å /me", null);
            }
        } else {
            if (UserValidations.checkStatsMessage(message, forwardFrom, this, chat_id, update)) {
                    user = StatsParser.parseStats(message, userName);
                    DBManager.upsertUser(user);
                    sendMsg(chat_id, "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É—á—Ç—ë–Ω!", ButtonsManager.getButtons(1));
            }
            CommandsManager.processCommand(message, this, String.valueOf(user_id), chat_id);
            //String suka = MessageBuilder.showUserStats(String.valueOf(user_id));
            //sendMsg(chat_id, suka, shit_buttons);
        }

        //User user = StatsParser.parseStats(message);
        //DBManager.addUser(user);



/*
*/
    }
        /*if (!UserDB.checkUser(user_id)){

            String firstName = update.getMessage().getChat().getFirstName();
            String secondName = update.getMessage().getChat().getLastName();
            String username = update.getMessage().getChat().getUserName();

            UserDB.newUser(user_id, firstName,
                    secondName, username);

        }

        User user = UserDB.getUser(user_id);

        EventProcessor.event(user.getEvent(), chat_id,
                this, user_id, message);





*/



        /*System.out.println("userId: " + user_id +
                "\nuser name: " + firstName +
                "\nmessage: " + message);


        if ( message.equals("/start") ) {

            if (!sdd.containsKey(user_id)) {
                sdd.put(user_id, 0);
            }

            if (sdd.get(user_id) == 0) {
                sendMsg(chat_id, "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, —Å—Ç—Ä–∞–Ω–Ω–∏–∫!\n" +
                        "–¢—ã –ø–æ–ø–∞–ª –≤ –ø—É—Å—Ç–æ—à—å, –∑–¥–µ—Å—å –Ω–∏ —É –∫–æ–≥–æ –Ω–µ—Ç –∏–º–µ–Ω, –ª–∏—à—å –ø—Ä–æ–∑–≤–∏—â–∞.\n" +
                        "–ö–∞–∫ —Ç–µ–±—è –≤–µ–ª–∏—á–∞—Ç—å?");
                sdd.put(user_id, 1);
            }

        } else if ( sdd.get(user_id) == 1 ) {

            names.put(user_id, message);
            sendMsg(chat_id, "–†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, " + message + "!");
            sdd.put(user_id, 2);

        } else if ( sdd.get(user_id) == 2 ){

            sendMsg(chat_id, "–ü—Ä–æ—Å—Ç–∏, " + names.get(user_id) + "" +
                    ", —É –º–µ–Ω—è —Å–µ–π—á–∞—Å –Ω–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ç–µ–±—è.");

        }

    }

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –µ–≥–æ –æ—Ç–ø—Ä–∞–≤–∫–∏.
     * @param chatId id —á–∞—Ç–∞
     * @param s –°—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
     */
    public synchronized void sendMsg(String chatId, String s, ArrayList<String> butts) {
        SendMessage sendMessage = new SendMessage();
        sendMessage.enableMarkdown(true);
        sendMessage.setChatId(chatId);
        sendMessage.setText(s);



        if ( butts != null ) {

            setButtons(sendMessage, butts);


        }

        try {
            sendMessage(sendMessage);
        } catch (TelegramApiException e) {

        }
    }

    /**
     * –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –±–æ—Ç–∞, —É–∫–∞–∑–∞–Ω–Ω–æ–µ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
     * @return –∏–º—è –±–æ—Ç–∞
     */
    public String getBotUsername() {
        return "megatonww_bot";
    }

    /**
     * –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç token –±–æ—Ç–∞ –¥–ª—è —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º Telegram
     * @return token –¥–ª—è –±–æ—Ç–∞
     */
    @Override
    public String getBotToken() {
        return "643589988:AAHko1xWJ21HxFEeKjdwIuYI8fsdDg9lKSk";
    }
}
